# DIGIT 0 (CARRY=0)

j in full_adder_a_is_1__0
# full_adder_a_is_0__0

m 2 in # read b
m 3 0 # read cin. cin__0=0

# calculate a0_cout__0 (cout for a=0)
# COUT = and(B, CIN)

j 2 a0_jump_cin__0
l a0_cout_b_is_0__0
m 4 0 # out carry
j a0_calc_s__0

l a0_jump_cin__0
j 3 a0_cout_b_is_0__0 next
m 4 1 # out carry

# S = xor(B, CIN)
l a0_calc_s__0
j 2 a0_s_b_is_1__0
j 3 a0_s_is_0__0 a0_s_is_1__0
l a0_s_b_is_1__0
j 3 a0_s_is_1__0 a0_s_is_0__0
l a0_s_is_0__0
m out 0 # out sum
j full_adder_end__0
l a0_s_is_1__0
m out 1 # out sum
j full_adder_end__0

l full_adder_a_is_1__0
m 2 in # read b
m 3 0 # read cin. cin__0=0

# calculate a1_cout__0 (cout for a=1)
#COUT = or(B, CIN)

j 2 a1_jumpb0__0 a1_jumpb1__0 #b
l a1_jumpb0__0
j 3 a1_cout0__0 a1_cout1__0 #cin

l a1_jumpb1__0
j 3 a1_cout1__0 a1_cout1__0 #cin

l a1_cout0__0
m 4 0 # out carry
j a1_calc_s__0

l a1_cout1__0
m 4 1 # out carry

#S = xnor(B, CIN)
l a1_calc_s__0
j 2 a1_s_b_is_1__0
j 3 a1_s_is_1__0 a1_s_is_0__0
l a1_s_b_is_1__0
j 3 a1_s_is_0__0 a1_s_is_1__0
l a1_s_is_0__0
m out 0 # out sum
j full_adder_end__0
l a1_s_is_1__0
m out 1 # out sum

l full_adder_end__0

#########################################

# DIGIT 1 (CARRY=4)

j in full_adder_a_is_1__1
# full_adder_a_is_0__1

m 2 in # read b
m 3 4 # read cin. cin__1=4

# calculate a0_cout__1 (cout for a=0)
# COUT = and(B, CIN)

j 2 a0_jump_cin__1
l a0_cout_b_is_0__1
m 4 0 # out carry
j a0_calc_s__1

l a0_jump_cin__1
j 3 a0_cout_b_is_0__1 next
m 4 1 # out carry

# S = xor(B, CIN)
l a0_calc_s__1
j 2 a0_s_b_is_1__1
j 3 a0_s_is_0__1 a0_s_is_1__1
l a0_s_b_is_1__1
j 3 a0_s_is_1__1 a0_s_is_0__1
l a0_s_is_0__1
m out 0 # out sum
j full_adder_end__1
l a0_s_is_1__1
m out 1 # out sum
j full_adder_end__1

l full_adder_a_is_1__1
m 2 in # read b
m 3 4 # read cin. cin__1=4

# calculate a1_cout__1 (cout for a=1)
#COUT = or(B, CIN)

j 2 a1_jumpb0__1 a1_jumpb1__1 #b
l a1_jumpb0__1
j 3 a1_cout0__1 a1_cout1__1 #cin

l a1_jumpb1__1
j 3 a1_cout1__1 a1_cout1__1 #cin

l a1_cout0__1
m 4 0 # out carry
j a1_calc_s__1

l a1_cout1__1
m 4 1 # out carry

#S = xnor(B, CIN)
l a1_calc_s__1
j 2 a1_s_b_is_1__1
j 3 a1_s_is_1__1 a1_s_is_0__1
l a1_s_b_is_1__1
j 3 a1_s_is_0__1 a1_s_is_1__1
l a1_s_is_0__1
m out 0 # out sum
j full_adder_end__1
l a1_s_is_1__1
m out 1 # out sum

l full_adder_end__1

m out 4 # print out carry